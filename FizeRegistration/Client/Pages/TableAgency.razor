@page "/app/agency/all"
@using AntDesign
@using FizeRegistration.Shared.DataContracts
@using System.ComponentModel
@using AntDesign
@using AntDesign.TableModels
@using System.Text.Json;
@using System;
@using System.Text.Json.Serialization;


<div class="basicBox" style="display: flow-root;margin-top: 2%; height:810px; background:white;">
    <div>
        <div style="margin: 20px;display:flex;">
            <Button Type="@ButtonType.Primary" OnClick="()=>CreateAgency()">Add Agency</Button>
             <h5 style="margin:auto;">
        @if (AgencyInformation != null)
        {
            @foreach (var agency in AgencyInformation)
            {
                @if (agency.IsDelete)
                        {
                <Tag @key="agency">@agency.AgencyName</Tag>
                            
                        }
            }
            <Button Danger Size="small" OnClick="@(e => DeleteListAgency())">Delete</Button>
        }
    </h5>
            <input style="margin-left: auto;" @bind="TextValidate" @oninput="OnTextValidateChanged" placeholder="Filter @tableFilterContract.ColumnName ..." />
        </div>
    </div>
    <Table  OnRowClick="OnRowClick" Bordered="true" DefaultExpandAllRows="true" @ref="table" TItem="AgencyDataContract" DataSource="@AgencyInformation">
        <PropertyColumn Style="@context.BackgroundColor" Property="c=>c.Id" Sortable />
        <PropertyColumn Style="@context.BackgroundColor" Title="Agency Name" Property="c=>c.AgencyName" Filterable />
        <PropertyColumn Style="@context.BackgroundColor" Title="Color" Property="c=>c.Color" />
        <PropertyColumn Style="@context.BackgroundColor" Title="First Name" Property="c=>c.FirstName" />
        <PropertyColumn Style="@context.BackgroundColor" Title="Last Name" Property="c=>c.LastName" />
        <PropertyColumn Style="@context.BackgroundColor" Title="Link" Property="c=>c.Link" />
        <PropertyColumn Style="@context.BackgroundColor" Title="Web Site" Property="c=>c.WebSite" />

        <ActionColumn Style="@context.BackgroundColor">
            @if (context.IsDelete)
            {
                 <Space>
                    <SpaceItem><Button Style="@context.BackgroundColor"  Danger OnClick="()=>Delete(context.Id)">Delete</Button></SpaceItem>
                </Space>
            }
            else
            {
                <Space >
                    <SpaceItem><Button  Type="@ButtonType.Primary" OnClick="()=>Update(int.Parse(context.Id))">Update</Button></SpaceItem>
                </Space>
            }

        </ActionColumn>
    </Table>
</div>

@code {

    public string Filter { get; set; }


    [Parameter] public string PlaceHolder { get; set; }

    [Parameter] public string TextValidate { get; set; }

    [Parameter] public EventCallback<string> TextValidateChanged { get; set; }

    [Parameter] public string TypeWord { get; set; } = "text";

    
}