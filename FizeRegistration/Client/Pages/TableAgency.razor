@page "/app/agency/table"
@*<div class="basicBox" style="background:white;height: 800px; width:1150px">
    <table class="table">
        <thead>
            <tr>
                <th>Id</th>
                <th>AgencyName</th>
                <th>Color</th>
                
                <th>FirstName</th>
                <th>LastName</th>
                <th>Link</th>
                <th>WebSite</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var agency in AgencyInformation)
            {
                <tr>
                    <td>@agency.Id</td>
                    <td>@agency.AgencyName</td>
                    <td>@agency.Color</td>
                    
                    <td>@agency.FirstName</td>
                    <td>@agency.LastName</td>
                    <td>@agency.Link</td>
                    <td>@agency.WebSite</td>
                </tr>
            }
        </tbody>
    </table>
    </div>*@
   @using AntDesign
   <div>
        <Table @ref="table" TItem="TestData" DataSource="@testData">
    <PropertyColumn Property="c=>c.Id" Sortable/>
    <PropertyColumn Title="Default sort" Property="c=>c.DayOfWeek" Sortable />
    <PropertyColumn Title="Custom comparer" Property="c=>c.DayOfWeek" Sortable SorterCompare="@((v1, v2) => v1 - v2)"/>
    <PropertyColumn Title="Custom comparer(order by DayName)" Property="c=>c.DayOfWeek" Sortable SorterCompare="@((v1, v2) => string.CompareOrdinal(DayName[v1], DayName[v2]))" />
    <PropertyColumn Title="DayName" Field="DayName[context.DayOfWeek]"/>
</Table>
   </div>
   

@code {

    ITable table;

    TestData[] testData;

    public class TestData
    {
        public int Id { get; set; }

        public int DayOfWeek { get; set; }
    }

    public string[] DayName = {"None", "Monday", "Tuesday", "Wednesdays", "Thursday", "Friday", "Saturday", "Sunday"};

    /// <inheritdoc />
    protected override void OnInitialized()
    {
        testData = GetForecastAsync();
        base.OnInitialized();
    }

    public TestData[] GetForecastAsync()
    {
        var rng = new Random();
        return Enumerable.Range(0, 5).Select(index => new TestData
        {
            Id = index,
            DayOfWeek = rng.Next(1, 8),
        }).ToArray();
    }

}