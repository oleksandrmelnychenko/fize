@page "/"
@using AntDesign
@using FizeRegistration.Client.Helpers
@inherits AntDomComponentBase
@inject NavigationManager NavigationManager

@code{
    protected override async Task OnInitializedAsync()
    {
         NavigationManager.NavigateTo("/auth");
    }

}
@*<svg xmlns="http://www.w3.org/2000/svg" class="icon" viewBox="0 0 1024 1024" fill="#ff9800" width="256" height="256">
  <path d="M349 838c0 17.7 14.2 32 31.8 32h262.4c17.6 0 31.8-14.3 31.8-32V642H349v196zm531.1-684H143.9c-24.5 0-39.8 26.7-27.5 48l221.3 376h348.8l221.3-376c12.1-21.3-3.2-48-27.7-48z"></path>
</svg>
<Table DataSource="data" OnChange="OnChange" TItem="Data">
  <PropertyColumn Property="c=>c.Id"
                  Sortable
                  Filterable />

  <PropertyColumn Property="c=>c.Name"
                  SorterCompare="@((a,b)=> string.Compare(a,b))"
                  SortDirections="new[] { SortDirection.Descending }"
                  Filterable />

  <PropertyColumn Property="c=>c.Address"
                  SorterCompare="@((a,b)=> string.Compare(a,b))"
                  SortDirections="new[] { SortDirection.Descending, SortDirection.Ascending }"
                  Filterable />

  <PropertyColumn Property="c=>c.BirthDate"
                  Format="yyyy/MM/dd"
                  Sortable
                  Filterable />

  <PropertyColumn Property="c=>c.IsActive"
                  Sortable
                  Filterable />

  <PropertyColumn Property="c=>c.Gender"
                  Sortable
                  Filterable />

  <PropertyColumn Property="c=>c.Hobbies"
                  Sortable
                  Filterable />
</Table>*@

@using AntDesign.TableModels;
@using System.Text.Json;
@using System;
@code {

  class Data
  {
    public Data(string name, string address, DateTime birthDate, bool isActive, Gender gender, Hobbies? hobbies)
    {
      Id = Guid.NewGuid();
      Name = name;
      Address = address;
      BirthDate = birthDate;
      IsActive = isActive;
      Gender = gender;
      Hobbies = hobbies;
    }

    public Guid Id { get; set; }
    public string Name { get; set; }
    public string Address { get; set; }
    public DateTime BirthDate { get; set; }
    public bool IsActive { get; set; }
    public Gender Gender { get; set; }
    public Hobbies? Hobbies { get; set; }
  }

  enum Gender
  {
    Male,
    Female
  }

  [Flags]
  enum Hobbies
  {
    Reading = 1,
    Sport = 2,
    Cooking = 4
  }

  Data[] data =
  {
        new("John Brown","New York No. 1 Lake Park",new DateTime(1980,1,1),true,Gender.Male,Hobbies.Cooking | Hobbies.Reading),
        new("Sara Green","London No. 1 Lake Park",new DateTime(1983,12,1),true,Gender.Female,Hobbies.Reading | Hobbies.Sport),
        new("Joe Black", "Sidney No. 1 Lake Park",new DateTime(1977,11,1),true,Gender.Male,Hobbies.Cooking | Hobbies.Sport),
        new("Jim Red","London No. 2 Lake Park",new DateTime(1985,1,1),false,Gender.Male,null),
  };

  void OnChange(QueryModel<Data> query)
  {
    Console.WriteLine(JsonSerializer.Serialize(query));
  }
}